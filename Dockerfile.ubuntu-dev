FROM ubuntu:24.04

# Prevent interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Install essential packages and development tools
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    git \
    vim \
    neovim \
    build-essential \
    jq \
    ripgrep \
    fd-find \
    bat \
    htop \
    sudo \
    ca-certificates \
    gnupg \
    lsb-release \
    # Audio tools for notifications from container
    pulseaudio-utils \
    alsa-utils \
    sox \
    # Dependencies for pyenv
    libbz2-dev \
    libffi-dev \
    liblzma-dev \
    libncurses5-dev \
    libncursesw5-dev \
    libreadline-dev \
    libsqlite3-dev \
    libssl-dev \
    llvm \
    tk-dev \
    xz-utils \
    zlib1g-dev \
    && rm -rf /var/lib/apt/lists/*

# Install pyenv
ENV PYENV_ROOT=/opt/pyenv
ENV PATH=$PYENV_ROOT/bin:$PYENV_ROOT/shims:$PATH
RUN git clone --depth=1 https://github.com/pyenv/pyenv.git $PYENV_ROOT && \
    cd $PYENV_ROOT && \
    src/configure && \
    make -C src && \
    pyenv install 3.12 && \
    pyenv global 3.12

# Install nvm and Node.js
ENV NVM_DIR=/opt/nvm
ENV NODE_VERSION=22
RUN mkdir -p $NVM_DIR && \
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash

# Install Node.js and global packages using nvm in a single RUN command
# Also create symlinks for global access
RUN bash -c "source $NVM_DIR/nvm.sh && \
    nvm install $NODE_VERSION && \
    nvm alias default $NODE_VERSION && \
    nvm use default && \
    npm install -g yarn && \
    npm install -g tsx && \
    npm install -g @anthropic-ai/claude-code && \
    ln -s \$(which node) /usr/local/bin/node && \
    ln -s \$(which npm) /usr/local/bin/npm && \
    ln -s \$(which npx) /usr/local/bin/npx && \
    ln -s \$(which yarn) /usr/local/bin/yarn && \
    ln -s \$(which tsx) /usr/local/bin/tsx && \
    ln -s \$(which claude) /usr/local/bin/claude"

# Install Bun
RUN curl -fsSL https://bun.sh/install | bash
ENV PATH="/root/.bun/bin:$PATH"

# Configure git globally to handle ownership issues and set default credentials
RUN git config --system --add safe.directory '*' && \
    git config --system user.email "claude@anthropic.com" && \
    git config --system user.name "Claude Ting"

# Create workspace directory
RUN mkdir -p /workspace

# Set up basic environment
RUN mkdir -p /root/.local/share/nvim && \
    mkdir -p /root/.claude

# Set sandbox environment variable
ENV IS_SANDBOX=1

# Create shell initialization script for pyenv and nvm
RUN echo '# Pyenv initialization' >> /etc/bash.bashrc && \
    echo 'export PYENV_ROOT=/opt/pyenv' >> /etc/bash.bashrc && \
    echo 'export PATH="$PYENV_ROOT/bin:$PYENV_ROOT/shims:$PATH"' >> /etc/bash.bashrc && \
    echo 'eval "$(pyenv init -)"' >> /etc/bash.bashrc && \
    echo '' >> /etc/bash.bashrc && \
    echo '# NVM initialization' >> /etc/bash.bashrc && \
    echo 'export NVM_DIR=/opt/nvm' >> /etc/bash.bashrc && \
    echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> /etc/bash.bashrc && \
    echo '[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"' >> /etc/bash.bashrc

WORKDIR /workspace

CMD ["/bin/bash"]
